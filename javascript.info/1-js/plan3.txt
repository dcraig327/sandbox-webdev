getting-started
  introduction
  editor
  devtools
first-steps
  hello-world (intro, ext scripts)
  structure
  use strict
  variables (const, name things right)
  types (no objects, but typeof)
  type-conversions (conversions string/number/boolean, no objects)
  operators
  comparison (no objects)
  uibasic
  logical-ops
  while-for (labels, no objects)
  switch
  function-basics (decl, shadowing,  naming, default params)
  function-expressions-arrows (function expr, arrow, todo: move new Function out of this?)
  javascript-specials (TODO, remove it? migrate all function* to separate chapter?)
code-quality
  debugging-chrome (TODO)
  coding-style (TODO)
  write-unmaintainable-code (TODO)
  test-driven-development (TODO)
  polyfills (TODO)
object-basics
  object(props, for-in, refs, assign)
  garbage-collection
  object-methods (this, method syntax, no call/apply)
  constructor-new
  symbol
  object-toprimitive
  << number (rounding, precision, isFinite, isNaN, parse*, Math.*)
  << string (quotes, search, substring, tagged template notice)
  array
  array-methods (TODO: translate tasks)
  iterable
  map-set-weakmap-weakset
  date (TODO: tasks)
    <<< json?
    << intl
more-syntax
  function-arguments-rest-spread
  destructuring-assignment (also func params destructuring)
  advanced-loops (iterators over objects, arrays)
  << try..catch, rethrow using err.name
deeper
  recursion 
    running execution context = where + lexical environment = envrec + outer
    context stack
    pow task
    traverse list task
      task: traverse list back
  closures
    LE outer
    returning a function
    garbage collection
    var
    window
  function-object
    name property (obj props, methods, assignments - set it)
    length property
    custom properties
  new function
  scheduling: settimeout, setinterval 
    recursive settimeout
  call-apply-decorators
  bind

-------

<<< descriptors (TODO: LATER, need JSON to output, better after inheritance to explain getOwnProps)
<<< getter setter


constructors
classes
instanceof

после 4-object сделать 
  descriptors


proxy?

error-handling
  try..catch 
  object-oriented error handling (inheritance, rethrow etc)

more-features
  try..catch
  try..catch in decorators!
  setTimeout
  JSON


======
class A extends Object != class A
